{
  "name": "e2e-tests",
  "version": "1.0.0",
  "license": "Apache-2.0",
  "description": "SkillTree Dashboard and Client Display End to End Tests",
  "author": "SkillTree Team",
  "main": "index.js",
  "config": {
    "dbHost": "localhost"
  },
  "scripts": {
    "printDb": "echo DB Host =[$npm_package_config_dbHost]",
    "preinstall": "npm run verifyMathImageSnapshotIsNotUsed",
    "postinstall": "stop-only --folder cypress/e2e --folder cypress/e2e/client-display --folder cypress/e2e/metrics",
    "licenseDepCheck": "license-checker --production --onlyAllow='MIT;ISC;Apache-2.0' --summary",
    "licenseHeaderCheck": "license-check-and-add check -f '../license-add/license-add-config.json'",
    "licenseHeaderAdd": "license-check-and-add add -f ../license-add/license-add-config.json",
    "licenseCheck": "npm run licenseHeaderCheck && npm run licenseDepCheck",
    "verifyMathImageSnapshotIsNotUsed": "if find cypress/e2e/ -type f  -exec grep -in \"matchImageSnapshot\" {} + ; then exit -1; else exit 0; fi",
    "verifyThatNewSnapshotsAreNotCreated": "if git status | grep \"cypress/snapshots\" ; then exit -1; else exit 0; fi",
    "cy:open": "TZ=UTC cypress open",
    "cy:open:oauth": "TZ=UTC cypress open --env oauthMode=true",
    "cy:open:dev": "TZ=UTC cypress open --config baseUrl=http://localhost:8082",
    "cy:open:devEST": "TZ=EST cypress open --config baseUrl=http://localhost:8082",
    "cy:open:dev:oauth": "TZ=UTC cypress open --config baseUrl=http://localhost:8082 --env oauthMode=true",
    "cy:open:dev:verifyEmail": "TZ=UTC cypress open --config baseUrl=http://localhost:8082 --env verifyEmail=true",
    "cy:run": "TZ=UTC npm run licenseCheck && cypress run --browser chrome",
    "cy:run:oauth": "TZ=UTC npm run licenseCheck && cypress run --browser chrome --env oauthMode=true",
    "cy:run:accessibility": "TZ=UTC npm run licenseCheck && cypress run --browser chrome --env enableLighthouse=true,enableAvgLighthouseScore=true --browser chrome --headless --spec \"cypress/e2e/accessibility/*.js\"",
    "cy:run:dev": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082",
    "cy:run:dev:specificTest": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --spec \"cypress/e2e/discoverable_proj_invite_spec.js\"",
    "cy:run:dev:updateMetricsForSpecificTests": "TZ=UTC cypress run --browser chrome --env updateSnapshots=true --config baseUrl=http://localhost:8082 --spec \"cypress/e2e/my-progress_spec.js,cypress/e2e/projects_spec.js\"",
    "cy:run:dev:metrics": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082  --env customSnapshotsDir=./cypress/snapshots/metrics --spec \"cypress/e2e/metrics/*\"",
    "cy:run:dev:updateMetricsSnapshots": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082  --env updateSnapshots=true,customSnapshotsDir=./cypress/snapshots/metrics --spec \"cypress/e2e/metrics/*\"",
    "cy:run:dev:updateSnapshots": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --env updateSnapshots=true,customSnapshotsDir=./cypress/snapshots/ --spec \"cypress/e2e/skills_group_spec.js\" --record",
    "cy:run:dev:updateClientDisplaySnapshots": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --env updateSnapshots=true,customSnapshotsDir=./cypress/snapshots/client-display --spec \"cypress/e2e/client-display/client-display-skills_filtering_spec.js,cypress/e2e/client-display/client-display-theme_spec.js\" --record",
    "cy:run:dev:clientDisplay": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --env customSnapshotsDir=./cypress/snapshots/client-display --spec \"cypress/e2e/client-display/client-display-self_report_skills_spec.js\"",
    "cy:run:dev:quiz": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --env customSnapshotsDir=./cypress/snapshots/quiz --spec \"cypress/e2e/quiz/client-display_quiz_visual_spec.js\"",
    "cy:run:dev:accessibility": "TZ=UTC cypress run --browser chrome --env enableLighthouse=true --headless --config baseUrl=http://localhost:8082 --spec cypress/e2e/accessibility/accessibility_quiz_specs.js",
    "cy:run:dev:oauth": "TZ=UTC cypress run --browser chrome --config baseUrl=http://localhost:8082 --env oauthMode=true",
    "cy:verify": "cypress verify",
    "backend:start": "java -Dspring.datasource.url=jdbc:postgresql://$npm_package_config_dbHost:5432/skills -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties -jar ../service/target/skills-service-*.jar",
    "backend:start:verifyEmail": "java -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties -Dskills.authorization.verifyEmailAddresses=true -jar ../service/target/skills-service-*.jar",
    "backend:start:rabbitmq": "java -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties -Dskills.websocket.enableStompBrokerRelay=true -Dskills.websocket.relayHost=localhost -Dlogging.level.org.springframework.web.socket=TRACE -jar ../service/target/skills-service-*.jar ",
    "backend:start:oauth": "java -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties,file:serverConfigs/backend_oauth_application.properties -jar ../service/target/skills-service-*.jar ",
    "backend:start:ci": "mkdir -p ./logs && npm run backend:start > ./logs/skills-service.out &",
    "backend:start:verifyEmail:ci": "mkdir -p ./logs && npm run backend:start:verifyEmail > ./logs/skills-service.out &",
    "backend:start:oauth:ci": "mkdir -p ./logs && npm run backend:start:oauth > ./logs/skills-service.out &",
    "backend:start:rabbitmq:ci": "mkdir -p ./logs && npm run backend:start:rabbitmq > ./logs/skills-service.out &",
    "backend:waitToStart": "npx wait-on -t 160000 http://localhost:8080",
    "backend:resetDb": "export PGPASSWORD=skillsPassword && psql -U postgres -h $npm_package_config_dbHost -d skills -f ./cypress/db/reset.sql",
    "backend:clearDb": "export PGPASSWORD=skillsPassword && psql -U postgres -h $npm_package_config_dbHost -d skills -f ./cypress/db/clear.sql",
    "backend:setupInviteOnly": "export PGPASSWORD=skillsPassword && psql -U postgres -h $npm_package_config_dbHost -d skills -f ./cypress/db/createInviteOnlyProject.sql",
    "backend:countScheduledTasks": "export PGPASSWORD=skillsPassword && psql -U postgres -h $npm_package_config_dbHost -d skills -f ./cypress/db/countScheduledTasks.sql",
    "backend:dropAllDBTables": "export PGPASSWORD=skillsPassword && psql -U postgres -h $npm_package_config_dbHost -d skills -f ./cypress/db/dropTables.sql",
    "client-display:serve": "cd ../client-display && npm prune && npm install && npm run serve",
    "client-display:serve:ci": "mkdir -p ./logs && npm run client-display:serve > ./logs/client-display.out &",
    "client-display:serve:ci:oauth": "mkdir -p ./logs && VUE_APP_AUTHENTICATION_URL=hydra npm run client-display:serve > ./logs/client-display.out &",
    "client-display:waitToStart": "npx wait-on -t 160000 http://localhost:8083",
    "cyServices:start:skills-service": "npm run backend:start:ci && npm run backend:waitToStart",
    "cyServices:start:skills-service:verifyEmail": "npm run fake-smtp:start:ci &&  npm run backend:start:verifyEmail:ci && npm run backend:waitToStart",
    "cyServices:start:skills-service:oauth": "npm run fake-smtp:start:ci &&  npm run backend:start:oauth:ci && npm run backend:waitToStart",
    "cyServices:start:skills-service:rabbitmq": "npm run fake-smtp:start:ci &&  npm run backend:start:rabbitmq:ci && npm run backend:waitToStart",
    "cyServices:start:client-display": "npm run client-display:serve:ci && npm run client-display:waitToStart",
    "cyServices:start:client-display:oauth": "npm run client-display:serve:ci:oauth && npm run client-display:waitToStart",
    "cyServices:start": "npm run cyServices:start:skills-service && npm run fake-smtp:start:ci && npm run cyServices:start:client-display",
    "cyServices:kill:skills-service": "for procid in $(ps -aux | grep \"serverConfigs/.*properties\" | grep \"jar$\" | awk '{print $2}'); do echo \"killing skills-service ${procid}\"; kill -9 $procid; done",
    "cyServices:kill:client-display": "for procid in $(ps -aux | grep \"client-display\" | grep \"serve\" | grep -v \"grep\" | awk '{print $2}'); do echo \"killing skills-display ${procid}\"; kill -9 $procid; done",
    "cyServices:kill:client-display:1": "for procid in $(ps -aux | grep \"client-display\" | grep \"vue-cli-service serve\" | grep -v \"grep\" | awk '{print $2}'); do echo \"killing skills-display  ${procid}\"; kill -9 $procid; done",
    "cyServices:kill": "npm run cyServices:kill:skills-service && npm run cyServices:kill:client-display && npm run cyServices:kill:client-display:1 && npm run fake-smtp:stop",
    "print-env": "print-env",
    "fake-smtp:start": "fake-smtp-server --smtp-port 1026 --http-port 1081",
    "fake-smtp:start:ci": "mkdir -p ./logs && nohup npm run fake-smtp:start > ./logs/fake-smtp.log &",
    "fake-smtp:stop": "fuser -k 1081/tcp"
  },
  "devDependencies": {
    "@bahmutov/print-env": "2.1.2",
    "axe-core": "4.4.3",
    "badge-maker": "3.3.1",
    "cypress": "11.2.0",
    "cypress-audit": "1.1.0",
    "cypress-axe": "1.4.0",
    "cypress-file-upload": "5.0.8",
    "cypress-image-snapshot": "4.0.1",
    "cypress-plugin-tab": "1.0.5",
    "cypress-real-events": "1.7.4",
    "cypress-wait-until": "1.7.2",
    "dayjs": "1.10.4",
    "eslint": "7.9.0",
    "fake-smtp-server": "0.8.0",
    "license-check-and-add": "4.0.5",
    "license-checker": "25.0.1",
    "moment": "2.29.4",
    "moment-timezone": "0.5.37",
    "number-format.js": "2.0.9",
    "object-scan": "14.0.0",
    "stop-only": "3.3.1",
    "wait-on": "5.2.1"
  },
  "dependencies": {
    "idb-keyval": "6.2.0"
  }
}
