# Copyright 2020 SkillTree
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Integration

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build-and-test-postgres.yml'
      - '.github/workflows/publish-image-snapshot.yml'

jobs:
  build-skills-service-for-ui-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          java -version
          mvn --version

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build skills-service
        env:
          MAVEN_OPTS: -Xmx2048m
        run: |
          mvn --batch-mode install -DskipTests

      - name: upload service jar
        uses: actions/upload-artifact@v4
        with:
          name: service jar
          path: ./service/target/*.jar

  ui-tests-against-postgres:
#    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    needs: [build-skills-service-for-ui-tests]
    strategy:
      fail-fast: false
      matrix:
        #IMPORTANT: must, must, must match the total number of containers below: runSubsetOfCypressTests.sh.sh -t <num_of_containers>
#        container: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
        container: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: print default vars  [${{ github.event_name }}]
        run: |
          echo "${{ github.event_name }}"

      - name: Install libs
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo psql --version
          sudo apt-get install fonts-noto-color-emoji

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          java -version
          npm -v
          node -v

      - uses: actions/download-artifact@v4
        with:
          name: service jar
          path: ./service/target/

      - name: Prep Services for Cypress tests
        run: |
          cd e2e-tests
          npm install
          npm run backend:dropAllDBTables
          npm run cyServices:start
          cd ..

      - name: Run Cypress tests
        run: |
          cd e2e-tests
          ../.github/scripts/runSubsetOfCypressTests.sh -t 10 -c ${{ matrix.container }} 
          cd ..
        env:
          ELECTRON_EXTRA_LAUNCH_ARGS: '--disable-gpu'


      - name: upload result artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: UI test artifacts (${{ matrix.container }})
          path: |
            ./e2e-tests/logs
            ./e2e-tests/cypress/videos
            ./e2e-tests/cypress/screenshots
            ./e2e-tests/cypress/visualRegression/diff

      - name: verify that new screenshot snapshots were not created
        run: |
          cd e2e-tests
          npm run verifyThatNewSnapshotsAreNotCreated


  ui-tests-against-postgres-cypress-dashboard:
    if: github.event_name == 'schedule-never'
    runs-on: ubuntu-22.04
#    container:
#      image: cypress/browsers:node-20.6.1-chrome-116.0.5845.187-1-ff-117.0-edge-116.0.1938.76-1
    needs: [build-skills-service-for-ui-tests]
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run in parallel
        containers: [1]

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Install libs
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo psql --version
          sudo apt-get install fonts-noto-color-emoji

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          java -version

      - uses: actions/download-artifact@v4
        with:
          name: service jar
          path: ./service/target/

#      - name: Prep Services for Cypress tests when running in a cypress docker container
#        run: |
#          cd e2e-tests
#          ls
#          sed -i 's/"dbHost": "localhost"/"dbHost": "postgres"/' package.json
#          cat package.json
#          npm install
#          npm run backend:dropAllDBTables
#          npm run cyServices:start
#          cd ..

      - name: Prep Services for Cypress tests
        run: |
          cd e2e-tests
          npm install
          npm run backend:dropAllDBTables
          npm run cyServices:start
          cd ..

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e-tests
          record: true
          parallel: true
          group: 'skills-service tests'
          tag: "${{ github.workflow }}"
          browser: chrome
          spec: cypress/e2e/markdown_spec.js
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload result artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: UI test with cypress dashboards (${{ matrix.containers }})
          path: |
            ./e2e-tests/logs
            ./e2e-tests/cypress/visualRegression/diff

      - name: verify that new screenshot snapshots were not created
        run: |
          cd e2e-tests
          npm run verifyThatNewSnapshotsAreNotCreated


  service-against-postgresql:
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other containers
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        # IMPORTANT: must, must, must match the total number of containers below: runSubsetOfServiceTests.sh -t <num_of_containers>
        container: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]

    services:
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          mvn --version
          java -version

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run skills-service tests
        env:
          MAVEN_OPTS: -Xmx3G -XX:+UnlockDiagnosticVMOptions -XX:GCLockerRetryAllocationCount=100
        run: |
          cd service
          ../.github/scripts/runSubsetOfServiceTests.sh -t 15 -c ${{ matrix.container }} -d "-Dspring.datasource.url=jdbc:postgresql://localhost:5432/skills -Dspring.datasource.username=postgres -Dspring.datasource.password=skillsPassword"

      - name: upload result artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: Service test artifacts (${{ matrix.container }})
          path: |
            ./service/target/*.log
            ./e2e-tests/logs
            ./e2e-tests/cypress/visualRegression/diff
