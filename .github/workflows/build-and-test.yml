# Copyright 2020 SkillTree
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Integration

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build-and-test-postgres.yml'
      - '.github/workflows/publish-image-snapshot.yml'
      - '.gitlab-ci.yml'
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build-and-test-postgres.yml'
      - '.github/workflows/publish-image-snapshot.yml'
      - '.gitlab-ci.yml'

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["**/README.md"]'

  build-skills-service-for-ui-tests:
    needs: [pre_job]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          mvn --version
          java -version

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build skills-service
        env:
          MAVEN_OPTS: -Xmx2048m
        run: mvn --batch-mode install -DskipTests

      - name: upload service jar
        uses: actions/upload-artifact@v3
        with:
          name: service jar
          path: ./service/target/*.jar

  ui-tests-against-postgres:
    runs-on: ubuntu-22.04
    container:
      image: cypress/browsers:node-18.14.1-chrome-110.0.5481.96-1-ff-109.0-edge-110.0.1587.41-1
    needs: [build-skills-service-for-ui-tests]
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run in parallel
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Install libs
      run: |
        apt-get update
        apt-get install -y postgresql-client
        psql --version
        apt-get install fonts-noto-color-emoji

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '14'

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '19' # The JDK version to make available on the path.

    - uses: s4u/setup-maven-action@v1.6.0
      with:
        java-version: '19' # The JDK version to make available on the path.

    - name: Print Versions
      run: |
        mvn --version
        java -version

    - uses: actions/download-artifact@v3
      with:
        name: service jar
        path: ./service/target/

    - name: Prep Services for Cypress tests
      run: |
        cd e2e-tests
        ls
        sed -i 's/"dbHost": "localhost"/"dbHost": "postgres"/' package.json
        cat package.json
        npm install
        npm run backend:dropAllDBTables
        npm run cyServices:start
        cd ..

    - name: Run Cypress tests
      uses: cypress-io/github-action@v5
      with:
        working-directory: e2e-tests
        record: true
        parallel: true
        group: 'skills-service tests'
        tag: "${{ github.workflow }}"
        browser: chrome
      env:
        # pass the Dashboard record key as an environment variable
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        # pass GitHub token to allow accurately detecting a build vs a re-run build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload result artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: UI test artifacts (${{ matrix.containers }})
        path: |
          ./e2e-tests/logs
          ./e2e-tests/cypress/snapshots/**/**/__diff_output__/*.png
          ./e2e-tests/cypress/snapshots/**/__diff_output__/*.png

    - name: verify that new screenshot snapshots were not created
      run: |
        cd e2e-tests
        npm run verifyThatNewSnapshotsAreNotCreated

  service-against-postgresql:
    needs: [pre_job]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other containers
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        # IMPORTANT: must, must, must match the total number of containers below: runSubsetOfServiceTests.sh -t <num_of_containers>
        container: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]

    services:
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          mvn --version
          java -version

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run skills-service tests
        env:
          MAVEN_OPTS: -Xmx2048m
        run: |
          cd service
          ../.github/scripts/runSubsetOfServiceTests.sh -t 15 -c ${{ matrix.container }} -d "-Dspring.datasource.url=jdbc:postgresql://localhost:5432/skills -Dspring.datasource.username=postgres -Dspring.datasource.password=skillsPassword"

      - name: upload result artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Service test artifacts (${{ matrix.container }})
          path: |
            ./service/target/*.log
            ./e2e-tests/logs
            ./e2e-tests/cypress/snapshots/*.js/__diff_output__/**
