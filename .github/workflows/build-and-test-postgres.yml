# Copyright 2020 SkillTree
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test against PostgreSQL

#on:
#  push:
#    paths-ignore:
#      - 'README.md'
#  pull_request:
#    paths-ignore:
#      - 'README.md'
on:
  schedule:
   - cron: '0 5 * * *'
  workflow_dispatch:


jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: skillsPassword
          POSTGRES_DB: skills
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Install Emoji Support
      run: sudo apt-get install fonts-noto-color-emoji

    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14'

    - uses: actions/setup-java@v1
      with:
        java-version: '11.X.X' # The JDK version to make available on the path.

    - name: Print Versions
      run: |
        mvn --version
        java -version

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build skills-service
      run: mvn --batch-mode install -Dspring.datasource.url=jdbc:postgresql://localhost:5432/skills -Dspring.datasource.username=postgres -Dspring.datasource.password=skillsPassword

    - name: Start Services for Cypress tests
      run: |
        cd e2e-tests
        npm install
        npm run backend:dropAllDBTables:postgres
        npm run cyServices:start:skills-service:postgresql
        npm run cyServices:start:client-display
        cd ..

    - name: Run Cypress tests
      uses: cypress-io/github-action@v2
      with:
        working-directory: e2e-tests
        record: true
        parallel: false
        group: 'skills-service against postgres'
        tag: "${{ github.workflow }}"
        env: db=postgres
      env:
        # pass the Dashboard record key as an environment variable
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        # pass GitHub token to allow accurately detecting a build vs a re-run build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload result artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: CI result artifacts
        path: |
          ./service/target/*.jar
          ./service/target/*.log
          ./e2e-tests/logs
